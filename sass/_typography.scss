// We actually want all of these heading-x to have these 2 properties.
// That's a perfect use case for a Sass extend.
%heading {
  font-family: $font-display;
  font-weight: 400;
}

// Now, this heading-1 selector is copied in %heading selector.
// So, instead of %heading above, we will have heading-1.
// It's not a mixin, because the mixin works the other way around.
// In a mixin, the code inside %heading would be pasted inside heding-1.
.heading-1 {
  @extend %heading;
  font-size: 4.5rem;
  color: $color-grey-light-1;
  // For a situation when we have two lines, we don't want all the spacing between
  // two lines.
  line-height: 1;
}

.heading-2 {
  @extend %heading;
  font-size: 4rem;
  font-style: italic;
  line-height: 1;

  &--light {
    color: $color-grey-light-1;
  }

  &--dark {
    color: $color-grey-dark-1;
  }
}

.heading-3 {
  @extend %heading;
  font-size: 1.6rem;
  color: $color-primary;
  text-transform: uppercase;
}

.heading-4 {
  @extend %heading;
  font-size: 1.9rem;

  &--light {
    color: $color-grey-light-1;
  }

  &--dark {
    color: $color-grey-dark-1;
  }
}

.btn {
  background-color: $color-primary;
  color: #fff;
  border: none;
  border-radius: 0;
  font-family: $font-display;
  font-size: 1.5rem;
  text-transform: uppercase;
  padding: 1.8rem 3rem;
  cursor: pointer;
  transition: all 0.2s;

  &:hover {
    background-color: $color-primary-dark;
  }
}

// Helper classes. In bigger projects you should create a new file.
// Instead of using hard-code we are going to reference to theses classes.
// Atomic CSS: a "movement" where people are starting to style their entire pages
//      using only these small and unique classes. Sometimes it's useful, but
//      maybe it's a bit too much to style all of the elements on your page just
//      using these helper classes.
.mb-sm {
  margin-bottom: 2rem;
}

.mb-md {
  margin-bottom: 3rem;
}

.mb-lg {
  margin-bottom: 4rem;
}

.mb-hg {
  margin-bottom: 8rem;
}
